{"version":3,"sources":["component/book-list-item/index.js","component/book-list-item/book-list-item.js","component/bookstore-service-context/bookstore-service-context.js","component/hoc/with-bookstore-service.js","actions/index.js","utils/compose.js","component/spinner/index.js","component/spinner/spinner.js","component/error-indicator/index.js","component/error-indicator/error-indicator.js","component/book-list/book-list.js","component/book-list/index.js","component/shopping-cart-table/shopping-cart-table.js","component/shopping-cart-table/index.js","component/pages/home-page.js","component/pages/cart-page.js","component/shop-header/index.js","component/shop-header/shop-header.js","component/app/index.js","component/app/app.js","component/error-boundry/index.js","component/error-boundry/error-boundry.js","services/bookstore-service.js","reducers/book-list.js","reducers/shopping-cart.js","reducers/index.js","store.js","index.js"],"names":["BookListItem","book","onAddedToCart","title","author","price","coverImage","className","src","alt","onClick","React","createContext","BookStoreServiceProvider","Provider","BoorStoreServiceConsumer","Consumer","withBookstoreService","Wrapped","props","bookstoreService","bookAddedToCart","bookId","type","payload","fetchBooks","dispatch","getBooks","then","data","catch","err","compose","funcs","comp","reduceRight","wrapped","f","Spinner","ErrorIndicator","BookList","books","map","key","id","BookListContainer","this","loading","error","Component","connect","bookList","bindActionCreators","mapDispatchToProps","onIncrease","onDecrease","onDelete","ShoppingCartTable","shoppingCart","items","cartItems","total","orderTotal","item","idx","count","HomePage","CartPage","ShopHeader","to","App","role","path","component","exact","ErrorBoundry","state","hasError","setState","children","BookstoreService","Promise","resolve","reject","setTimeout","updateBookList","action","undefined","updateCartItems","slice","updateOrder","quantity","find","itemIndex","findIndex","newItem","updateCartItem","updateShoppingCart","reducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","value","document","getElementById"],"mappings":"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","file":"static/js/main.4a670d2b.chunk.js","sourcesContent":["import BookListItem from \"./book-list-item\";\r\n\r\nexport default BookListItem\r\n","import React from 'react'\r\nimport './book-list-item.css'\r\n\r\nconst BookListItem = ({book, onAddedToCart}) => {\r\n    const {title, author, price, coverImage} = book;\r\n    return (\r\n        <div className=\"book-list-item\">\r\n            <div className=\"book-cover\">\r\n                <img src={coverImage} alt=\"cover\"/>\r\n            </div>\r\n            <div className=\"book-details\">\r\n                <span className=\"book-title\">{title}</span>\r\n                <div className=\"book-author\">{author}</div>\r\n                <div className=\"book-price\">${price}</div>\r\n                <button\r\n                    onClick={onAddedToCart}\r\n                    className=\"btn btn-info add-to-cart\">Add to cart\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default BookListItem;","import React from 'react'\r\n\r\nconst {\r\n    Provider: BookStoreServiceProvider,\r\n    Consumer: BoorStoreServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n    BookStoreServiceProvider,\r\n    BoorStoreServiceConsumer\r\n}","import React from 'react'\r\nimport {BoorStoreServiceConsumer} from '../bookstore-service-context'\r\n\r\nconst withBookstoreService = () => (Wrapped) => {\r\n    return (props) => {\r\n        return (\r\n            <BoorStoreServiceConsumer>\r\n                {\r\n                    (bookstoreService) => {\r\n                        return (<Wrapped {...props}\r\n                                         bookstoreService={bookstoreService}/>)\r\n                    }\r\n                }\r\n            </BoorStoreServiceConsumer>\r\n        )\r\n    }\r\n}\r\nexport default withBookstoreService;","const booksRequested = () => {\r\n    return {\r\n        type: 'FETCH_BOOKS_REQUEST'\r\n    }\r\n}\r\nconst booksLoaded = (newBooks) => {\r\n    return {\r\n        type: 'FETCH_BOOKS_SUCCESS',\r\n        payload: newBooks\r\n    }\r\n};\r\nconst booksError = (error) => {\r\n    return {\r\n        type: 'FETCH_BOOKS_FAILURE',\r\n        payload: error\r\n    }\r\n}\r\nexport const bookAddedToCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_ADDED_TO_CART',\r\n        payload: bookId\r\n    }\r\n}\r\nexport const bookRemovedFromCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_REMOVED_FROM_CART',\r\n        payload: bookId\r\n    }\r\n}\r\nexport const allBooksRemovedFromCart = (bookId) => {\r\n    return {\r\n        type: 'ALL_BOOKS_REMOVED_FROM_CART',\r\n        payload: bookId\r\n    }\r\n}\r\n\r\n\r\nconst fetchBooks = (bookstoreService) => () => (dispatch) => {\r\n    dispatch(booksRequested());\r\n    bookstoreService.getBooks()\r\n        .then((data) => dispatch(booksLoaded(data)))\r\n        .catch((err) => dispatch(booksError(err)))\r\n}\r\n\r\nexport {\r\n    fetchBooks,\r\n}","const compose = (...funcs) => (comp) => {\r\n    return funcs.reduceRight(\r\n        (wrapped, f) => f(wrapped), comp);\r\n};\r\n\r\nexport default compose;\r\n","import Spinner from './spinner'\r\n\r\nexport default Spinner;","import React from 'react'\r\nimport './spinner.css'\r\n\r\nconst Spinner = () => {\r\n    return <div>Loading...</div>\r\n}\r\n\r\nexport default Spinner;","import ErrorIndicator from './error-indicator'\r\n\r\nexport default ErrorIndicator;","import React from 'react'\r\n\r\n\r\nconst ErrorIndicator = () => {\r\n    return <div>Error!</div>\r\n}\r\n\r\nexport default ErrorIndicator;","import React, {Component} from 'react'\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from 'react-redux'\r\n\r\nimport './book-list.css'\r\nimport BookListItem from \"../book-list-item\";\r\nimport withBookstoreService from \"../hoc/with-bookstore-service\";\r\nimport {fetchBooks, bookAddedToCart} from \"../../actions\";\r\nimport {compose} from '../../utils';\r\nimport Spinner from \"../spinner\";\r\nimport ErrorIndicator from \"../error-indicator\";\r\n\r\n\r\nconst BookList = ({books, onAddedToCart}) => {\r\n    return (\r\n        <ul className=\"book-list\">\r\n            {\r\n                books.map((book) => {\r\n                    return (\r\n                        <li key={book.id}><BookListItem\r\n                            book={book}\r\n                            onAddedToCart={() => onAddedToCart(book.id)}\r\n                        /></li>\r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n    );\r\n}\r\n\r\nclass BookListContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchBooks();\r\n    }\r\n\r\n    render() {\r\n        const {books, loading, error, onAddedToCart} = this.props;\r\n        if (loading) {\r\n            return <Spinner/>\r\n        }\r\n        if (error) {\r\n            return <ErrorIndicator/>\r\n        }\r\n        return <BookList books={books} onAddedToCart={onAddedToCart}/>\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = ({bookList: {books, loading, error}}) => {\r\n    return {books, loading, error}\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, {bookstoreService}) => {\r\n    return bindActionCreators({\r\n        fetchBooks: fetchBooks(bookstoreService),\r\n        onAddedToCart: (bookAddedToCart)\r\n    }, dispatch)\r\n}\r\n\r\n\r\nexport default compose(\r\n    withBookstoreService(),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(BookListContainer);","import BookList from \"./book-list\";\r\n\r\nexport default BookList\r\n","import React from 'react';\nimport './shopping-cart-table.css';\nimport {connect} from \"react-redux\";\nimport {allBooksRemovedFromCart, bookAddedToCart, bookRemovedFromCart} from \"../../actions\";\n\nconst ShoppingCartTable = ({items, total, onIncrease, onDecrease, onDelete}) => {\n    const renderRow = (item, idx) => {\n        const {id, title, count, total} = item;\n        return (\n            <tr key={id}>\n                <td>{idx + 1}</td>\n                <td>{title}</td>\n                <td>{count}</td>\n                <td>{total}</td>\n                <td>\n                    <button\n                        onClick={() => onDelete(id)}\n                        className=\"btn btn-outline-danger btn-sm float-right\">\n                        <i className=\"fa fa-trash-o\"/>\n                    </button>\n                    <button\n                        onClick={() => onIncrease(id)}\n                        className=\"btn btn-outline-success btn-sm float-right\">\n                        <i className=\"fa fa-plus-circle\"/>\n                    </button>\n                    <button\n                        onClick={() => onDecrease(id)}\n                        className=\"btn btn-outline-warning btn-sm float-right\">\n                        <i className=\"fa fa-minus-circle\"/>\n                    </button>\n                </td>\n            </tr>\n        )\n    }\n    return (\n        <div className=\"shopping-cart-table\">\n            <h2>Your Order</h2>\n            <table className=\"table\">\n                <thead>\n                <tr>\n                    <th>#</th>\n                    <th>Item</th>\n                    <th>Count</th>\n                    <th>Price</th>\n                    <th>Action</th>\n                </tr>\n                </thead>\n                <tbody>\n                {items.map(renderRow)}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nconst mapStateToProps = ({shoppingCart: {cartItems, orderTotal}}) => {\n    return {\n        items: cartItems,\n        total: orderTotal\n    }\n}\n\nconst mapDispatchToProps = {\n    onIncrease: bookAddedToCart,\n    onDecrease: bookRemovedFromCart,\n    onDelete: allBooksRemovedFromCart\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCartTable);\n","import ShoppingCartTable from './shopping-cart-table';\n\nexport default ShoppingCartTable;\n","import React from 'react'\r\nimport BookList from \"../book-list\";\r\nimport ShoppingCartTable from \"../shopping-cart-table\";\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <div>\r\n            <BookList/>\r\n            <ShoppingCartTable/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React from 'react'\r\n\r\nconst CartPage = () => {\r\n    return <div>Cart Page</div>\r\n}\r\n\r\nexport default CartPage;","import ShopHeader from './shop-header';\n\nexport default ShopHeader;","import React from 'react';\nimport './shop-header.css';\nimport {Link} from \"react-router-dom\";\n\n\nconst ShopHeader = () => {\n    return (\n        <header className=\"shop-header row\">\n            <Link to='/'>\n                <div className=\"logo text-dark\" >ReStore</div>\n            </Link>\n            <Link to='cart'>\n                <div className=\"shopping-cart\">\n                    <i className=\"cart-icon fa fa-shopping-cart\"/>\n                </div>\n            </Link>\n        </header>\n    );\n};\n\nexport default ShopHeader;\n","import App from './app'\r\n\r\nexport default App;","import React from 'react'\r\nimport {Route, Switch} from 'react-router-dom'\r\n\r\nimport {CartPage, HomePage} from \"../pages\"\r\nimport ShopHeader from \"../shop-header\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <main role=\"main\" className=\"container\">\r\n            <ShopHeader/>\r\n            <Switch>\r\n                <Route path='/' component={HomePage} exact/>\r\n                <Route path='/cart' component={CartPage}/>\r\n            </Switch>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default App;","import ErrorBoundry from './error-boundry'\r\n\r\nexport default ErrorBoundry;","import React, {Component} from 'react'\r\nimport ErrorIndicator from \"../error-indicator\";\r\n\r\nexport default class ErrorBoundry extends Component {\r\n    state = {\r\n        hasError: false\r\n    };\r\n\r\n    componentDidCatch() {\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <ErrorIndicator/>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n","export default class BookstoreService {\r\n    data = [\r\n        {\r\n            id: 1,\r\n            title: 'Production-Ready Microservices',\r\n            author: 'Susan J. Fowler',\r\n            price: 32,\r\n            coverImage: 'https://images-na.ssl-images-amazon.com/images/I/41yJ75gpV-L._SX381_BO1,204,203,200_.jpg'},\r\n        {\r\n            id: 2,\r\n            title: 'Release It!',\r\n            author: 'Michael T. Nygard',\r\n            price: 45,\r\n            coverImage: 'https://images-na.ssl-images-amazon.com/images/I/414CRjLjwgL._SX403_BO1,204,203,200_.jpg'}\r\n    ];\r\n\r\n    getBooks() {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() =>{\r\n                resolve(this.data)\r\n            }, 700)\r\n        })\r\n    }\r\n}\r\n","const updateBookList = (state, action) => {\r\n    if (state === undefined) {\r\n        return {\r\n            books: [],\r\n            loading: true,\r\n            error: null,\r\n        }\r\n    }\r\n    switch (action.type) {\r\n        case 'FETCH_BOOKS_REQUEST':\r\n            return {\r\n                books: [],\r\n                loading: true,\r\n                error: null\r\n            };\r\n        case 'FETCH_BOOKS_SUCCESS':\r\n            return {\r\n                books: action.payload,\r\n                loading: false,\r\n                error: null\r\n            };\r\n        case 'FETCH_BOOKS_FAILURE':\r\n            return {\r\n                books: [],\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        default:\r\n            return state.bookList\r\n    }\r\n}\r\nexport default updateBookList;","\r\nconst updateCartItems = (cartItems, item, idx) => {\r\n    if (item.count === 0) {\r\n        return [\r\n           // all items before\r\n            ...cartItems.slice(0, idx),\r\n           // all items after\r\n            ...cartItems.slice(idx + 1)\r\n        ]\r\n    }\r\n    if (idx === -1) {\r\n        return [\r\n            ...cartItems,\r\n            item\r\n        ];\r\n    }\r\n    return [\r\n        // all items before index\r\n        ...cartItems.slice(0, idx),\r\n        item,\r\n        //all items after index\r\n        ...cartItems.slice(idx + 1)\r\n    ]\r\n}\r\n\r\nconst updateCartItem = (book, item = {}, quantity) => {\r\n    const {\r\n        id = book.id,\r\n        count = 0,\r\n        title = book.title,\r\n        total = 0\r\n    } = item;\r\n\r\n    return {\r\n        id,\r\n        title,\r\n        count: count + quantity,\r\n        total: total + quantity * book.price\r\n    }\r\n}\r\nconst updateOrder = (state, bookId, quantity) => {\r\n    const {bookList: {books}, shoppingCart: {cartItems}} = state\r\n    const book = books.find(({id}) => id === bookId)\r\n    const itemIndex = cartItems\r\n        .findIndex(({id}) => id === bookId)\r\n    const item = cartItems[itemIndex]\r\n\r\n    const newItem = updateCartItem(book, item, quantity)\r\n    return {\r\n        orderTotal: 0,\r\n        cartItems: updateCartItems(cartItems, newItem, itemIndex)\r\n    }\r\n}\r\n\r\nconst updateShoppingCart = (state, action) => {\r\n    if(state === undefined) {\r\n        return {\r\n            cartItems: [],\r\n            orderTotal: 0\r\n        }\r\n    }\r\n    switch (action.type) {\r\n        case 'BOOK_ADDED_TO_CART':\r\n            return updateOrder(state, action.payload, 1)\r\n\r\n        case 'BOOK_REMOVED_FROM_CART':\r\n            return updateOrder(state, action.payload, -1)\r\n\r\n        case 'ALL_BOOKS_REMOVED_FROM_CART':\r\n            const item = state.shoppingCart.cartItems.find(({id}) => id === action.payload);\r\n            return updateOrder(state, action.payload, -item.count)\r\n        default:\r\n            return state.shoppingCart;\r\n    }\r\n}\r\nexport default updateShoppingCart;\r\n","import updateBookList from \"./book-list\";\r\nimport updateShoppingCart from \"./shopping-cart\";\r\n\r\n\r\nconst reducer = (state, action) => {\r\n\r\n    return {\r\n        bookList: updateBookList(state, action),\r\n        shoppingCart: updateShoppingCart(state, action)\r\n    }\r\n};\r\n\r\nexport default reducer","import {createStore, applyMiddleware} from \"redux\";\r\nimport reducer from './reducers';\r\nimport thunk from \"redux-thunk\"\r\n\r\nconst store = createStore(\r\n    reducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux'\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\n\r\nimport App from './component/app'\r\nimport ErrorBoundry from \"./component/error-boundry\";\r\nimport BookstoreService from \"./services/bookstore-service\";\r\nimport {BookStoreServiceProvider} from \"./component/bookstore-service-context\";\r\nimport store from './store'\r\n\r\nconst bookstoreService = new BookstoreService();\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ErrorBoundry>\r\n            <BookStoreServiceProvider value={bookstoreService}>\r\n                <Router>\r\n                    <App/>\r\n                </Router>\r\n            </BookStoreServiceProvider>\r\n        </ErrorBoundry>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}